package com.bootcampCognizantJavaDeveloper.EstruturaDeRepeticaoEArrays;

public class AnotacoesEstruturaRepeticao {

	//ESTRUTURA DE REPETIÇÃO
	//O REAL PODER DOS COMPUTADORES ESTÁ NA SUA HABILIDADE PARA REPETIR UMA OPERAÇÃO
	//OU UMA SÉRIE DE OPERAÇÕES VÁRIAS VEZES
	//CADA REPETIÇÃO É CHAMADO DE LAÇO(LOOP) É UM DOS CONCEIROS BÁSICOS DA PROGRAMAÇÃO ESTRUTURADA
	//UMA ESTRUTURA DE REPETIÇÃO PERMITE QUE UMA SEQUÊNCIA DE COMANDOS SEJA EXECUTADA REPETIDAMENTE
	//CASO DETERMINADAS CONDIÇÕES SEJAM SATISFEITA(TRUE), CASO FALSE ELE SAI DO LOOP
	
	//AS ESTRUTURAS DE REPETIÇÃO PODEM SER CLASSIFICADAS EM:
	//REPETIÇÃO COM TESTE NO INÍCIO(WHILE)
	//REPETIÇÃO COM TESTE NO FINAL(DO-WHILE)
	//REPETIÇÃO CONTADA(FOR)
	//O COMANDO BREAK É UTILIZADO PARA TERMINAR DE UMA FORMA ABRUPTA UMA REPETIÇÃO
	//QUANDO O COMANDO CONTINUE É EXECUTADO, OS COMANDOS RESTANTES DA REPETIÇÃO
	//SÃO IGNORADOS E O PROGRAMA VOLTA A TESTAR NOVAMENTE OU NÃO.(OBS QUANDO O CONTINUE
	//É INSERIDO NO CÓDIGO, TUDO QUE ESTIVER ABAIXO DELE, NÃO É EXECUTADO, ELE VOLTA
	//NOVAMENTE PARA TESTAR SE VAI DÁ TRUE OU FALSE.
	//A DIFERENÇA ENTRE BREAK OU CONTINUE, É QUE O CONTINUE SÓ PODE SER USADO EM UMA 
	//ESTRUTURA DE REPETIÇÃO, ELE É POUCO UTILIZADO
	
	//INCREMENTO E DECREMENTO
	
	//PRÉ-FIXADO
	//SOMAR UMA UNIDADE AO VALOR DA VARIÁVEL ++NUMERO (NUMERO = NUMERO + 1 ,RETORNE NUMERO)
	//SUBTRAIR UMA UNIDADE DO VALOR DA VARIÁVEL --NUMERO (NUMERO = NUMERO -1 , RETORNE NUMERO)
	
	//PÓS-FIXADO
	//SOMAR UM AO VALOR DA VARIÁVEL, RETORNANDO O VALOR ORIGINAL NUMERO++ (RETORNE NUMERO , NUMERO = NUMERO +1)
	//SUBTRATIR UM VALOR DA VARIÁVEL, RETORNANDO O VALOR ORIGINAL (RETORNE NUMERO, NUMERO = NUMERO -1)
	
	//OPERAÇÕES ARITIMÉTICAS
	//SOMAR K UNIDADES AO VALOR DA VARIÁVEL, NUMERO += K (NUMERO = NUMERO + K)
	//SUBTRAIR K UNIDADES DO VALOR DA VARIÁVEL, NUMERO -= K (NUMERO = NUMERO - K)
	//MULTIPLICAR O VALOR DA VARIÁVEL POR K , NUMERO *= K (NUMERO = NUMERO * K)
	//DIVIDIR O VALOR DA VARIÁVEL POR K, NUMERO /= K (NUMERO = NUMERO / K)
	
}
