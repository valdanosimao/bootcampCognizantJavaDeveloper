package com.bootcampCognizantJavaDeveloper.excecoes;

public class Anotacoes {
	
	//TRATAMENTO DE EXCEÇÕES
	//EXCEÇÃO É UM EVENTO QUE INTERROMPE O FLUXO NORMAL DO PROCESSAMENTO DE UMA CLASSE.
	
	//O USO CORRETO DE EXCEÇÕES TORNA O PROGRAMA MAIS ROBUSTO E CONFIÁVEL
	//COM O TRATAMENTO DE EXCEÇÕES, UM PROGRAMA PODE CONTINUAR EXECUTANDO DEPOIS DE LIDAR
	//COM UM PROBLEMA
	//IMPORTANTE: INCORPORE SUA ESTRATÉGIA DE TRATAMENTO DE EXCEÇÕES NO SISTEMA DESDE O PRINCÍPIO
	//DO PROCESSO DO PROJETO
	//PODE SER DIFÍCIL INCLUIR UM TRATAMENTO DE EXCEÇÕES EFICIENTE, DEPOIS QUE O SISTEMA FOI IMPLEMENTADO
	
	//ERRO: USADO PELA JVM QUE SERVE PARA INDICAR SE EXISTE ALGUM PROBLEMA DE RECURSO DO PROGRAMA
	//TORNANDO A EXECUÇÃO IMPOSSÍVEL DE CONTINUAR
	
	//UNCHECKED(RUNTIME): EXCEPTION QUE PODEM SER EVITADOS SE FOREM TRATADOS E ANALISADOS PELO DESENVOLVEDOR
	//CHECKD EXCEPTION: EXCEPTION QUE DEVEM SER EVITADOS E TRATADOS PELO DESENVOLVEDOR PARA O PROGRAMA FUNCIONAR, SÓ FUNCIONA SE TRATAR
	
	//OBS: AS SUBCLASSES QUE ERDAM DE RUNTIMEEXCEPTION, NÃO É OBRIGATORIO TRATAR, AO CONTRÁRIO DAS OUTRAS
	//É OBRIGATORIAMENTE TEM QUE TRATAR

	//TRY, CATCH, FINALLY: CADA UMA DESSAS PALAVRAS JUNTAS, DEFINEM BLOCO PARA TRATAMENTO DE EXCEÇÕES
	
	//THROWS: DECLARA QUE UM MÉTODO PODE LANÇAR UMA OU VÁRIAS EXCEÇÕES
	
	//THROW: LANÇA EXPLICITAMENTE UMA EXCEPTION
	
	
}
