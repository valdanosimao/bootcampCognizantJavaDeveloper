package com.bootcampCognizantJavaDeveloper.entendendoMetodosJava;

public class AnotacoesCriacaoMetodos {

	//**CONCEITUAÇÃO
	//É UMA PORÇÃO DE CÓDIGOS(SUB-ROTINAS) QUE É DISPONIBILIZADA POR UMA CLASSE. ESTE É EXECUTADOS
	//QUANDO É FEITA UMA REQUISIÇÃO A ELE, SÃO RESPONSÁVEIS POR DEFINIR E REALIZAR UM DETERMINADO 
	//COMPORTAMENTO.

	//CRIAÇÃO
	//<?VISIBILIDADE?> <?TIPO?> <?MODIFICADOR?> RETORNO, NOME (<?PARÂMETRO?>) <?EXCEÇÕES?> CORPO

	//VISIBILIDADE: PUBLIC, PROTECTED OU PRIVATE
	//TIPO: CONCRETO OU ABSTRATO
	//MODIFICADOR: STATIC OU FINAL
	//RETORNO: TIPO DE DADO OU VOID
	//NOME: NOME QUE É FORNECIDO AO MÉTODO
	//PARÂMETRO: PARÂMETRO QUE PODE RECEBER
	//EXCEÇÕES: EXCEÇÕES QUE PODE LANÇAR
	//CORPO: CÓDIGO QUE POSSUI OU VAZIO

	//**ASSINATURA DOS MÉTODOS
	//ASSINATURA: É A FORMA DE INDENTIFICAR UNICAMENTE O MÉTODO
	//EX: NOME + PARÂMETRO
	//MÉTODOS:
	//public double calcularTotalVenda(double precoIten1, double precoIten2, double precoIten3){...}
	//ASSINATURA:
	//calcularTotalVenda(double precoIten1, double precoIten2, double precoIten3){...}

	//CONSTRUTOR E DESTRUTOR: SÃO MÉTODOS ESPECIAIS USADOS NA ORIENTAÇÃO A OBJETOS.
	//MENSAGEM: É O ATO DE SOLICITAR AO MÉTODO QUE O MESMO EXECUTE. ESTA PODE SER DIRECIONADA A 
	//UM OBJETO OU UMA CLASSE

	//PASSAGEM DE PARÂMETROS:
	//POR VALOR(CÓPIA)
	//POR REFERÊNCIA(ENDEREÇO)

	//BOAS PRATICAS:
	//NOMES DEVEM SER DESCRITIVOS, MAS CURTOS
	//NOTAÇÃO CAMELO: verificarSaldo(); executarTransferencia(...); etc
	//DEVE POSSUIR ENTRE 80 E 120 LINHAS
	//EVITE LISTA DE PARÂMETROS LONGAS
	//VISIBILIDADE ADEQUADAS
}
